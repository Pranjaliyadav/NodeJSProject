Strean and buffers

stream is an ongoing process
request is read by node in chunks

buffer is like a bus stop
construct allowing to hold multiple chunks and work on them and leave when theyre done

Types of errors

-syntax error 
-runtime error
-logical errors

HTTP hyper text transfer protocol

HTTPS -  Http secure ( httpm + data encryption )

core modules - http, https, fs, path, os
http - launch a server, send requests
https - launch a SSL server


//other ways to write this
// http.createServer(function(req, res){

// })

// http.createServer((req, res)=>{})

Event loop - in node app, keeps on running as long as there are event listeners registered


node js only uses 1 thread, how to handle multiple requests
security issues?

event loop starts when code is started automatically
handling event callbacks 

worker pool - do the heavy lifting, runs on diff thread, can connect with OS, totally detached from code and event loop

when worker is done, it will trigger callback

all this is built in

timers - execute setTimeour, setInterval callbacks
pending callbacks - execute I/O related callbacks that were deferred

poll - reteruve new io events execute their callbacks

check - execute setImmediate() callbacks

close callbacks - execute all close event callbacks

process.exit


client -> request -> server -> response -> client


run npm start
"start": "nodemon app.js"

expressJs framework on top of nodejs 

framework - set of helper fn, tools and rules that help build application
alternative to expressjs - vanilla nodejs, adonis.js, koa, sails.js

npm i --save express

Middlware - split code and run thorugh multiple fn

requests go from top to bottom

views will have bunch of html files

module.exports = path.dirname(require.main.filename);

template engines - dynamuc html content
in pug, indentation matters